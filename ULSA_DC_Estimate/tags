!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
CPP	Makefile	/^CPP= g++$/;"	m
Gib	ULSA_DC_Estimate.h	/^  float *Gib; \/\/ channel gain from node i to base station$/;"	m	class:ULSA_DC_Estimate
Gij	ULSA_DC_Estimate.h	/^  float **Gij;\/\/ channel gain from node i to node j$/;"	m	class:ULSA_DC_Estimate
IsolateNodeName	ULSA_DC_Estimate.h	/^  int  IsolateNodeName;$/;"	m	class:ULSA_DC_Estimate
JoiningHeadIndex	ULSA_DC_Estimate.h	/^  int  JoiningHeadIndex;$/;"	m	class:ULSA_DC_Estimate
LIB_PATH	Makefile	/^LIB_PATH= ..\/commonLibrary\/CORRE_MA_OPE.o \\$/;"	m
SA_FIN_TEMP	main.cpp	12;"	d	file:
SA_INI_TEMP	main.cpp	11;"	d	file:
ULSA_DC_Estimate	ULSA_DC_Estimate.cpp	/^ULSA_DC_Estimate::ULSA_DC_Estimate( FILE *fileReadCursor, int inputTotalNodes, $/;"	f	class:ULSA_DC_Estimate
ULSA_DC_Estimate	ULSA_DC_Estimate.cpp	/^ULSA_DC_Estimate::ULSA_DC_Estimate() {};$/;"	f	class:ULSA_DC_Estimate
ULSA_DC_Estimate	ULSA_DC_Estimate.h	/^class ULSA_DC_Estimate :public SABASE$/;"	c
ULSA_DC_Estimate_H	ULSA_DC_Estimate.h	17;"	d
addMemberSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::addMemberSA(int inputHeadIndex, int inputMemberName)$/;"	f	class:ULSA_DC_Estimate
addMemberSAIni	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::addMemberSAIni(int inputHeadIndex, int inputMemberName)$/;"	f	class:ULSA_DC_Estimate
aryFlagHRDone	ULSA_DC_Estimate.h	/^  bool *aryFlagHRDone; \/\/If it is true means Head Rotate have been done in this structure, starrt from ULSA_DC_Estimate$/;"	m	class:ULSA_DC_Estimate
bandwidthKhz	ULSA_DC_Estimate.h	/^  double bandwidthKhz;$/;"	m	class:ULSA_DC_Estimate
begin	ULSA_DC_Estimate.h	/^  clock_t begin, end;$/;"	m	class:ULSA_DC_Estimate
best1stTierTraffic	ULSA_DC_Estimate.h	/^  double best1stTierTraffic;$/;"	m	class:ULSA_DC_Estimate
best1st_Joule	ULSA_DC_Estimate.h	/^  double best1st_Joule;$/;"	m	class:ULSA_DC_Estimate
best1st_ms	ULSA_DC_Estimate.h	/^  double best1st_ms;$/;"	m	class:ULSA_DC_Estimate
best2ndTierTraffic	ULSA_DC_Estimate.h	/^  double best2ndTierTraffic;$/;"	m	class:ULSA_DC_Estimate
best2nd_Joule	ULSA_DC_Estimate.h	/^  double best2nd_Joule;$/;"	m	class:ULSA_DC_Estimate
best2nd_ms	ULSA_DC_Estimate.h	/^  double best2nd_ms;$/;"	m	class:ULSA_DC_Estimate
bestAllServeFound	ULSA_DC_Estimate.h	/^  bool   bestAllServeFound;$/;"	m	class:ULSA_DC_Estimate
bestAllSupStru	ULSA_DC_Estimate.h	/^  bool *bestAllSupStru;$/;"	m	class:ULSA_DC_Estimate
bestAvgInterference	ULSA_DC_Estimate.h	/^  double bestAvgInterference;$/;"	m	class:ULSA_DC_Estimate
bestAvgPowerOFAllNodes	ULSA_DC_Estimate.h	/^  double bestAvgPowerOFAllNodes;$/;"	m	class:ULSA_DC_Estimate
bestChNum	ULSA_DC_Estimate.h	/^  int    bestChNum;$/;"	m	class:ULSA_DC_Estimate
bestFeasibleJEntropy	ULSA_DC_Estimate.h	/^  double bestFeasibleJEntropy;$/;"	m	class:ULSA_DC_Estimate
bestFeasiblePayoff	ULSA_DC_Estimate.h	/^  double bestFeasiblePayoff;$/;"	m	class:ULSA_DC_Estimate
bestFeasibleSupNum	ULSA_DC_Estimate.h	/^  int    bestFeasibleSupNum;$/;"	m	class:ULSA_DC_Estimate
bestMaClusterStru	ULSA_DC_Estimate.h	/^  bool** bestMaClusterStru;$/;"	m	class:ULSA_DC_Estimate
bestTrafficReductionRatio	ULSA_DC_Estimate.h	/^  double bestTrafficReductionRatio;$/;"	m	class:ULSA_DC_Estimate
bestUpperLayerResource	ULSA_DC_Estimate.h	/^  double bestUpperLayerResource;$/;"	m	class:ULSA_DC_Estimate
cSystem	ULSA_DC_Estimate.h	/^  ULCS1b*  cSystem;   \/\/ system cluseter structure$/;"	m	class:ULSA_DC_Estimate
calculateMatrics_minResors	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::calculateMatrics_minResors()$/;"	f	class:ULSA_DC_Estimate
checkBestClusterStructure_DataCentric	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::checkBestClusterStructure_DataCentric(int inputRound)$/;"	f	class:ULSA_DC_Estimate
compRatio	ULSA_DC_Estimate.h	/^  double compRatio;$/;"	m	class:ULSA_DC_Estimate
compareDis	ULSA_DC_Estimate.h	/^    compareDis(const ULSA_DC_Estimate& sa) : mySA(sa) {} \/\/ constructor$/;"	f	struct:ULSA_DC_Estimate::compareDis
compareDis	ULSA_DC_Estimate.h	/^  struct compareDis$/;"	s	class:ULSA_DC_Estimate
computeBestAvgInterference	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeBestAvgInterference()$/;"	f	class:ULSA_DC_Estimate
computeBestAvgPower	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeBestAvgPower()$/;"	f	class:ULSA_DC_Estimate
computeBestTRR_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeBestTRR_DataCentric()$/;"	f	class:ULSA_DC_Estimate
computeNewInterference_FromIsoCluster	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeNewInterference_FromIsoCluster(vector<double> &newInterf,std::vector<double>&newPower,int IsoName,int isoCluIndex){$/;"	f	class:ULSA_DC_Estimate
computeNewInterference_FromNewTarHI	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeNewInterference_FromNewTarHI(vector<double> &newInterf,$/;"	f	class:ULSA_DC_Estimate
computeOriInterference_GivenIsolate	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeOriInterference_GivenIsolate(vector<double> &oriInterf,vector<double> &interfExcept,int isoCluIndex){$/;"	f	class:ULSA_DC_Estimate
computeOriInterference_GivenTarInJoinI	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeOriInterference_GivenTarInJoinI($/;"	f	class:ULSA_DC_Estimate
computeUpperResourceNoCodingNoPowerControl	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::computeUpperResourceNoCodingNoPowerControl()$/;"	f	class:ULSA_DC_Estimate
computingTimes	ULSA_DC_Estimate.h	/^  float computingTimes;$/;"	m	class:ULSA_DC_Estimate
confirmNeighbor3i	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::confirmNeighbor3i()$/;"	f	class:ULSA_DC_Estimate
confirmStructureChange	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::confirmStructureChange()$/;"	f	class:ULSA_DC_Estimate
consSol	ULSA_DC_Estimate.h	/^  ULConstraintSolver* consSol;$/;"	m	class:ULSA_DC_Estimate
coolOnce_minResors	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::coolOnce_minResors()$/;"	f	class:ULSA_DC_Estimate
correlationFactor	ULSA_DC_Estimate.h	/^  double correlationFactor;$/;"	m	class:ULSA_DC_Estimate
cur1st_Joule	ULSA_DC_Estimate.h	/^  double cur1st_Joule;$/;"	m	class:ULSA_DC_Estimate
cur1st_ms	ULSA_DC_Estimate.h	/^  double cur1st_ms;$/;"	m	class:ULSA_DC_Estimate
cur2nd_Joule	ULSA_DC_Estimate.h	/^  double cur2nd_Joule;$/;"	m	class:ULSA_DC_Estimate
cur2nd_ms	ULSA_DC_Estimate.h	/^  double cur2nd_ms;$/;"	m	class:ULSA_DC_Estimate
curChNum	ULSA_DC_Estimate.h	/^  int curChNum;$/;"	m	class:ULSA_DC_Estimate
curJEntropy	ULSA_DC_Estimate.h	/^  double  curJEntropy;$/;"	m	class:ULSA_DC_Estimate
curPayoff	ULSA_DC_Estimate.h	/^  double curPayoff;$/;"	m	class:ULSA_DC_Estimate
curSupNum	ULSA_DC_Estimate.h	/^  int  curSupNum;$/;"	m	class:ULSA_DC_Estimate
dataBits	ULSA_DC_Estimate.h	/^  double dataBits;$/;"	m	class:ULSA_DC_Estimate
debug_CheckSizeCorrect	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::debug_CheckSizeCorrect() {$/;"	f	class:ULSA_DC_Estimate
decideAdd3i_DC_HeadDetMemRan	ULSA_DC_Estimate.cpp	/^ void ULSA_DC_Estimate::decideAdd3i_DC_HeadDetMemRan() {$/;"	f	class:ULSA_DC_Estimate
decideDiscard3b	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::decideDiscard3b()$/;"	f	class:ULSA_DC_Estimate
decideDiscard3i_DC_HeadRanNodeDet_CompressionRatio	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::decideDiscard3i_DC_HeadRanNodeDet_CompressionRatio() {$/;"	f	class:ULSA_DC_Estimate
decideHeadJoining4b	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::decideHeadJoining4b(){$/;"	f	class:ULSA_DC_Estimate
decideHeadRotate2i_DC_HeadRanMemDet	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::decideHeadRotate2i_DC_HeadRanMemDet()$/;"	f	class:ULSA_DC_Estimate
decideIsolate4b	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::decideIsolate4b(){$/;"	f	class:ULSA_DC_Estimate
discardMemberSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::discardMemberSA(int inputHeadIndex, int inputMemberName)$/;"	f	class:ULSA_DC_Estimate
distanceOf2Nodes	ULSA_DC_Estimate.h	/^  float **distanceOf2Nodes;$/;"	m	class:ULSA_DC_Estimate
do1sttierPowerControlforBest_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::do1sttierPowerControlforBest_DataCentric() {$/;"	f	class:ULSA_DC_Estimate
do1sttierPowerControlforCur_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::do1sttierPowerControlforCur_DataCentric() {$/;"	f	class:ULSA_DC_Estimate
do1sttierPowerControlforNext_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::do1sttierPowerControlforNext_DataCentric() {$/;"	f	class:ULSA_DC_Estimate
do1sttierPowerControlforTEMP_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::do1sttierPowerControlforTEMP_DataCentric(double &temp1stJoule, double &temp1stMs) {$/;"	f	class:ULSA_DC_Estimate
do1sttierPowerMaxforBest_DataCentric	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::do1sttierPowerMaxforBest_DataCentric() {$/;"	f	class:ULSA_DC_Estimate
end	ULSA_DC_Estimate.h	/^  clock_t begin, end;$/;"	m	class:ULSA_DC_Estimate
estimateIsolate2ndTierGain	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::estimateIsolate2ndTierGain(int IsoNodeName,int isoCluIndex){$/;"	f	class:ULSA_DC_Estimate
estimateJoin2ndTierCost	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::estimateJoin2ndTierCost(int JoiningHeadIndex, int targetIndex){$/;"	f	class:ULSA_DC_Estimate
fidelityRatio	ULSA_DC_Estimate.h	/^  double fidelityRatio;\/\/ Temporary set by here 2013\/02\/21$/;"	m	class:ULSA_DC_Estimate
flagAnsFound	ULSA_DC_Estimate.h	/^  bool flagAnsFound;$/;"	m	class:ULSA_DC_Estimate
headCandidatesNum	ULSA_DC_Estimate.h	/^  int headCandidatesNum;$/;"	m	class:ULSA_DC_Estimate
indEntropy	ULSA_DC_Estimate.h	/^  double indEntropy;$/;"	m	class:ULSA_DC_Estimate
iniDone	ULSA_DC_Estimate.h	/^  bool iniDone;$/;"	m	class:ULSA_DC_Estimate
isDetailOutputOn	ULSA_DC_Estimate.h	/^  int isDetailOutputOn;$/;"	m	class:ULSA_DC_Estimate
isolateHeadSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::isolateHeadSA(int isoName,int IsolateCluI, int targetH){$/;"	f	class:ULSA_DC_Estimate
isolatedHeadIndex	ULSA_DC_Estimate.h	/^  int  isolatedHeadIndex;$/;"	m	class:ULSA_DC_Estimate
join_fromHeadSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::join_fromHeadSA(int JoiningHeadIndex,int targetH){$/;"	f	class:ULSA_DC_Estimate
keepBestStructure	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::keepBestStructure()$/;"	f	class:ULSA_DC_Estimate
lastIsoPassAccu	ULSA_DC_Estimate.h	/^  int lastIsoPassAccu;$/;"	m	class:ULSA_DC_Estimate
lastIsolateNodeName	ULSA_DC_Estimate.h	/^  int lastIsolateNodeName;$/;"	m	class:ULSA_DC_Estimate
lastIsolatedClusterIndex	ULSA_DC_Estimate.h	/^  int lastIsolatedClusterIndex;$/;"	m	class:ULSA_DC_Estimate
lastJoinPassAccu	ULSA_DC_Estimate.h	/^  int lastJoinPassAccu;$/;"	m	class:ULSA_DC_Estimate
lastJoingingMachine	ULSA_DC_Estimate.h	/^  vector<int> lastJoingingMachine;$/;"	m	class:ULSA_DC_Estimate
lastJoiningHead	ULSA_DC_Estimate.h	/^  int lastJoiningHead;$/;"	m	class:ULSA_DC_Estimate
lastJoiningHeadIndex	ULSA_DC_Estimate.h	/^  int lastJoiningHeadIndex;$/;"	m	class:ULSA_DC_Estimate
listCluMemBest	ULSA_DC_Estimate.h	/^  list <list <int> > *listCluMemBest;$/;"	m	class:ULSA_DC_Estimate
maBestInterference	ULSA_DC_Estimate.h	/^  double **maBestInterference;$/;"	m	class:ULSA_DC_Estimate
maBestInterfernceIndex	ULSA_DC_Estimate.h	/^  int **maBestInterfernceIndex;$/;"	m	class:ULSA_DC_Estimate
maIndexSortDecGain	ULSA_DC_Estimate.h	/^  int ** maIndexSortDecGain;$/;"	m	class:ULSA_DC_Estimate
maStrengthInterBest	ULSA_DC_Estimate.h	/^  double ** maStrengthInterBest;$/;"	m	class:ULSA_DC_Estimate
main	main.cpp	/^int main(int argc, char* argv[])$/;"	f
mapNodeName2DistanceRank	ULSA_DC_Estimate.h	/^  map <int, int>  *mapNodeName2DistanceRank;$/;"	m	class:ULSA_DC_Estimate
matrixComputer	ULSA_DC_Estimate.h	/^  CORRE_MA_OPE * matrixComputer;$/;"	m	class:ULSA_DC_Estimate
mySA	ULSA_DC_Estimate.h	/^    const ULSA_DC_Estimate& mySA;\/\/ data member$/;"	m	struct:ULSA_DC_Estimate::compareDis
next1st_Joule	ULSA_DC_Estimate.h	/^  double next1st_Joule;$/;"	m	class:ULSA_DC_Estimate
next1st_ms	ULSA_DC_Estimate.h	/^  double next1st_ms;$/;"	m	class:ULSA_DC_Estimate
next2nd_Joule	ULSA_DC_Estimate.h	/^  double next2nd_Joule;$/;"	m	class:ULSA_DC_Estimate
next2nd_ms	ULSA_DC_Estimate.h	/^  double next2nd_ms;$/;"	m	class:ULSA_DC_Estimate
nextChNum	ULSA_DC_Estimate.h	/^  int nextChNum;$/;"	m	class:ULSA_DC_Estimate
nextEventFlag	ULSA_DC_Estimate.h	/^  int  nextEventFlag;$/;"	m	class:ULSA_DC_Estimate
nextJEntropy	ULSA_DC_Estimate.h	/^  double  nextJEntropy;$/;"	m	class:ULSA_DC_Estimate
nextNodePower	ULSA_DC_Estimate.h	/^  double* nextNodePower;$/;"	m	class:ULSA_DC_Estimate
nextPayoff	ULSA_DC_Estimate.h	/^  double nextPayoff;$/;"	m	class:ULSA_DC_Estimate
nextSupNum	ULSA_DC_Estimate.h	/^  int  nextSupNum;$/;"	m	class:ULSA_DC_Estimate
nodes	ULSA_DC_Estimate.h	/^  std::vector <ULAGENT> nodes;$/;"	m	class:ULSA_DC_Estimate
operator ()	ULSA_DC_Estimate.h	/^    bool operator() (const int &i, const int &j)$/;"	f	struct:ULSA_DC_Estimate::compareDis
passNext2Cur	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::passNext2Cur() {$/;"	f	class:ULSA_DC_Estimate
power1st	ULSA_DC_Estimate.h	/^  double power1st;$/;"	m	class:ULSA_DC_Estimate
powerBest	ULSA_DC_Estimate.h	/^  double *powerBest;$/;"	m	class:ULSA_DC_Estimate
powerLastDiscard	ULSA_DC_Estimate.h	/^  double powerLastDiscard;$/;"	m	class:ULSA_DC_Estimate
powerMax	ULSA_DC_Estimate.h	/^  float powerMax;$/;"	m	class:ULSA_DC_Estimate
printClusterList	ULSA_DC_Estimate.cpp	/^void printClusterList(ULCS1b *cSystem)$/;"	f
printVecMatrix	ULSA_DC_Estimate.cpp	/^void printVecMatrix(vector <vector<int> >& ma)$/;"	f
ptrHeadLastDiscard	ULSA_DC_Estimate.h	/^  int  *ptrHeadLastDiscard;$/;"	m	class:ULSA_DC_Estimate
quantizationBits	ULSA_DC_Estimate.h	/^  int quantizationBits;$/;"	m	class:ULSA_DC_Estimate
radius	ULSA_DC_Estimate.h	/^  double radius;$/;"	m	class:ULSA_DC_Estimate
rateibMax	ULSA_DC_Estimate.h	/^  double *rateibMax; \/\/$/;"	m	class:ULSA_DC_Estimate
realNoise	ULSA_DC_Estimate.h	/^  double realNoise;$/;"	m	class:ULSA_DC_Estimate
releaseMemory	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::releaseMemory()$/;"	f	class:ULSA_DC_Estimate
resetSA3iSystem	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::resetSA3iSystem() {$/;"	f	class:ULSA_DC_Estimate
return1stTotalNcal1stResors_HomoPower	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::return1stTotalNcal1stResors_HomoPower() {$/;"	f	class:ULSA_DC_Estimate
returnClosetNodeIndexInGroup	ULSA_DC_Estimate.cpp	/^int ULSA_DC_Estimate::returnClosetNodeIndexInGroup(int tempX,int tempY, vector<int> &inputGroup)$/;"	f	class:ULSA_DC_Estimate
returnComprRatio	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::returnComprRatio()$/;"	f	class:ULSA_DC_Estimate
returnTransientAveragePower	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::returnTransientAveragePower()$/;"	f	class:ULSA_DC_Estimate
returnTransientJoule	ULSA_DC_Estimate.cpp	/^double ULSA_DC_Estimate::returnTransientJoule() {$/;"	f	class:ULSA_DC_Estimate
reverseMoveSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::reverseMoveSA()$/;"	f	class:ULSA_DC_Estimate
rotateHeadSA	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::rotateHeadSA(int inputHeadIndex, int inputMemberName)$/;"	f	class:ULSA_DC_Estimate
rotatedHeadNameLast	ULSA_DC_Estimate.h	/^  int rotatedHeadNameLast;$/;"	m	class:ULSA_DC_Estimate
roundBest	ULSA_DC_Estimate.h	/^  int  roundBest;;$/;"	m	class:ULSA_DC_Estimate
setIniHeadLimited	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::setIniHeadLimited()$/;"	f	class:ULSA_DC_Estimate
setIniStruKmeans	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::setIniStruKmeans()$/;"	f	class:ULSA_DC_Estimate
setInitialStucture	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::setInitialStucture(char* iniFlag)$/;"	f	class:ULSA_DC_Estimate
setSystem	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::setSystem(float inPowerMaxWatt, int inQuantizationBits,double inBandwidthKhz, double inFidelity)$/;"	f	class:ULSA_DC_Estimate
sortIndex	ULSA_DC_Estimate.h	/^  int sortIndex;$/;"	m	class:ULSA_DC_Estimate
startCool	ULSA_DC_Estimate.cpp	/^bool ULSA_DC_Estimate::startCool()$/;"	f	class:ULSA_DC_Estimate
sysComputing	ULSA_DC_Estimate.h	/^  SimSystem *sysComputing;$/;"	m	class:ULSA_DC_Estimate
targetHeadIndex	ULSA_DC_Estimate.h	/^  int  targetHeadIndex;$/;"	m	class:ULSA_DC_Estimate
targetNode	ULSA_DC_Estimate.h	/^  int  targetNode;$/;"	m	class:ULSA_DC_Estimate
tempAddT	ULSA_DC_Estimate.h	/^  double tempAddT;$/;"	m	class:ULSA_DC_Estimate
tempDisT	ULSA_DC_Estimate.h	/^  double tempDisT;$/;"	m	class:ULSA_DC_Estimate
tempHRT	ULSA_DC_Estimate.h	/^  double tempHRT;$/;"	m	class:ULSA_DC_Estimate
tempIsoT	ULSA_DC_Estimate.h	/^  double tempIsoT;$/;"	m	class:ULSA_DC_Estimate
tempJoinT	ULSA_DC_Estimate.h	/^  double tempJoinT;$/;"	m	class:ULSA_DC_Estimate
terminated	ULSA_DC_Estimate.h	/^  bool terminated;$/;"	m	class:ULSA_DC_Estimate
thres2	ULSA_DC_Estimate.h	/^  static const int thres2=200;$/;"	m	class:ULSA_DC_Estimate
thresholdd	ULSA_DC_Estimate.h	/^  static const int thresholdd=5;$/;"	m	class:ULSA_DC_Estimate
updateIsolateEstimatedpower	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::updateIsolateEstimatedpower(vector<double> &newPower,int IsolName,int isoCluIndex){$/;"	f	class:ULSA_DC_Estimate
updateJoinEstimatedPower	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::updateJoinEstimatedPower(vector<double> &newPower, $/;"	f	class:ULSA_DC_Estimate
vecBestBpshz_forVerification	ULSA_DC_Estimate.h	/^  vector<double> vecBestBpshz_forVerification;$/;"	m	class:ULSA_DC_Estimate
vecBestClusterBits	ULSA_DC_Estimate.h	/^  vector<double> vecBestClusterBits;$/;"	m	class:ULSA_DC_Estimate
vecBestClusterHeadMS	ULSA_DC_Estimate.h	/^  vector<double> vecBestClusterHeadMS;$/;"	m	class:ULSA_DC_Estimate
vecBestClusterHeadWatt	ULSA_DC_Estimate.h	/^  vector<double> vecBestClusterHeadWatt;$/;"	m	class:ULSA_DC_Estimate
vecBestClusterSize	ULSA_DC_Estimate.h	/^  vector<int> vecBestClusterSize;$/;"	m	class:ULSA_DC_Estimate
vecBestReceivedInterference	ULSA_DC_Estimate.h	/^  vector<double> vecBestReceivedInterference;$/;"	m	class:ULSA_DC_Estimate
vecBestSINR_forVerification	ULSA_DC_Estimate.h	/^  vector<double> vecBestSINR_forVerification;$/;"	m	class:ULSA_DC_Estimate
vecChooseIndex	ULSA_DC_Estimate.h	/^  vector<double> vecChooseIndex;$/;"	m	class:ULSA_DC_Estimate
vecClusterHeadBits	ULSA_DC_Estimate.h	/^  vector<double> vecClusterHeadBits;$/;"	m	class:ULSA_DC_Estimate
vecClusterHeadMS	ULSA_DC_Estimate.h	/^  vector<double> vecClusterHeadMS;$/;"	m	class:ULSA_DC_Estimate
vecClusterHeadWatt	ULSA_DC_Estimate.h	/^  vector<double> vecClusterHeadWatt;$/;"	m	class:ULSA_DC_Estimate
vecHeadCandidates	ULSA_DC_Estimate.h	/^  vector<int> vecHeadCandidates;$/;"	m	class:ULSA_DC_Estimate
vecHeadNameBest	ULSA_DC_Estimate.h	/^  vector <int> vecHeadNameBest;$/;"	m	class:ULSA_DC_Estimate
virtualCompression	ULSA_DC_Estimate.h	/^  double virtualCompression;$/;"	m	class:ULSA_DC_Estimate
wholeSystemEntopy	ULSA_DC_Estimate.h	/^  double wholeSystemEntopy;$/;"	m	class:ULSA_DC_Estimate
writePayoffEachRound_MinResors	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::writePayoffEachRound_MinResors(int round)$/;"	f	class:ULSA_DC_Estimate
writePayoffEachRound_MinResors_withHead	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::writePayoffEachRound_MinResors_withHead(int round,int head)$/;"	f	class:ULSA_DC_Estimate
writeStruSingleRound	ULSA_DC_Estimate.cpp	/^void ULSA_DC_Estimate::writeStruSingleRound(int round)$/;"	f	class:ULSA_DC_Estimate
~ULSA_DC_Estimate	ULSA_DC_Estimate.cpp	/^ULSA_DC_Estimate::~ULSA_DC_Estimate()$/;"	f	class:ULSA_DC_Estimate
